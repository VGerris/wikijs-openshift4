apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: wikijs-fe
  namespace: wikijs
spec:
  replicas: 1
  selector:
    name: wikijs-fe
  template:
    metadata:
      labels:
        name: wikijs-fe
    spec:
      containers:
      - env:
        - name: DB_TYPE
          value: "postgres"
        - name: DB_HOST
          valueFrom: { secretKeyRef: { name: wikijs-pguser-wikijs, key: host } } 
        - name: DB_SSL
          value: "true"
       #- name: NODE_TLS_REJECT_UNAUTHORIZED
         #value: "0"
        - name: DB_NAME
          valueFrom: { secretKeyRef: { name: wikijs-pguser-wikijs, key: dbname } }
        - name: DB_PASS
          valueFrom: { secretKeyRef: { name: wikijs-pguser-wikijs, key: password } }
        - name: DB_PORT
          valueFrom: { secretKeyRef: { name: wikijs-pguser-wikijs, key: port } }
        - name: DB_USER
          valueFrom: { secretKeyRef: { name: wikijs-pguser-wikijs, key: user } }
        - name: DB_PASSWORD
          valueFrom: { secretKeyRef: { name: wikijs-pguser-wikijs, key: password } }
        - name: DB_SSL_CA
          value: <value from getPsqlRootCAString.sh output> 
        image: docker.io/lucadentella/wikijs-ocp4-sideload:2.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: wikijs-fe
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
